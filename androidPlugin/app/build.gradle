plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"
    ndkVersion '22.1.7171670'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'

    compileOnly files('libs/godot-lib.3.4.2.stable.release.aar')

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

def tstamp = new Date().format('yyyy-MM-dd_HH-mm-ss')
def buildLogDir = "${rootDir}/logs"
mkdir("${buildLogDir}")
def buildLog = new File("${buildLogDir}/${tstamp}_buildLog.log")
import org.gradle.internal.logging.*

gradle.services.get(LoggingOutputInternal).addStandardOutputListener(new StandardOutputListener() {
    void onOutput(CharSequence output) {
        buildLog << output
    }
})

gradle.services.get(LoggingOutputInternal).addStandardErrorListener(new StandardOutputListener() {
    void onOutput(CharSequence output) {
        buildLog << output
    }
})
